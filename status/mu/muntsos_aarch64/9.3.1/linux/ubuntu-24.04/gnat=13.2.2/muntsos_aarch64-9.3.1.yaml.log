Test ran at 2025-02-05 12:42:50.804428+00:00

SOLUTION:
muntsos_aarch64=9.3.1: MuntsOS Embedded Linux support for AArch64 targets
Origin: source archive muntsos_aarch64-9.3.1.tbz2 at https://raw.githubusercontent.com/pmunts/alire-crates/75da2e559247e12db407cb2a31f59f2aeac75214/muntsos_aarch64/muntsos_aarch64-9.3.1.tbz2 with hashes sha256:d2798151374972411a2771536ed96948fdf129f7f667834ecfeac65e9ec3f678, sha512:093ab444880ce6d8faafc54d98a4bea5a82c7fa42bb017175b62dda0d8e19f52384e1730bff9711f7d779f4a9bc87b1d2cf39c8592065245d07dadf477410161
Available when: (case OS is Linux => True, others => False)
Properties:
   Post_Fetch run: sh -c ./postfetch (from ${CRATE_ROOT}/.)
   Author: Philip Munts
   Configuration: no modifiers
   Description: MuntsOS Embedded Linux support for AArch64 targets
   Long_Description: Introduction
============

This crate modifies an Alire program project to build a cross-compiled
program for a **[MuntsOS Embedded
Linux](https://github.com/pmunts/muntsos)** AArch64 / ARMv8 / arm64
target computer.

The **MuntsOS Embedded Linux** cross toolchain packages must be
installed on your Linux development computer before you can use this
crate. See [Application Note
#1](http://git.munts.com/muntsos/doc/AppNote1-Setup-Debian.pdf) for
Debian distributions or [Application Note
#2](http://git.munts.com/muntsos/doc/AppNote2-Setup-RPM.pdf) for RPM
distributions.

Each **MuntsOS Embedded Linux** cross toolchain contains prebuilt **[Ada
Web Server](https://github.com/AdaCore/aws)** and **[Linux Simple I/O
Library](https://github.com/pmunts/libsimpleio)** components. Therefore,
**DO NOT** attempt to **`alr with`** any of the **aws**,
**libsimpleio**, **mcp2221**, or **remoteio** crates in a project using
this crate.

Environment Variables
=====================

If **`ALIRE_DISABLESTYLECHECKS`** is set to **`yes`**, the postfetch
script will disable style checking in the project **`.gpr`** file.

If **`ALIRE_INSTALLMAKEFILE`** is set to **`yes`**, the postfetch script
will install an optional but useful **`Makefile`** to the project
directory.

You can add the following to **`~/.bashrc`** or its equivalent to
permanently define these environment variables:

    export ALIRE_DISABLESTYLECHECKS=yes
    export ALIRE_INSTALLMAKEFILE=yes

Example
=======

The following commands illustrate how to create an Alire program project
that will cross-compile a program to run on a **MuntsOS Embedded Linux**
target computer. The result is a pristine (*i.e.* all temporary, working
and deliverable files removed) project, suitable for checking into a
source code control repository.

    alr -n init --bin myexample
    cd myexample
    alr -n with muntsos_aarch64
    ALIRE_DISABLESTYLECHECKS=yes ALIRE_INSTALLMAKEFILE=yes alr action -r post-fetch
    make reallyclean

See also [Application Note
#7](http://git.munts.com/muntsos/doc/AppNote7-Flash-LED-Ada-Alire.pdf).

   Maintainer: Philip Munts <phil@munts.net>
   Maintainers_Logins: pmunts
   Name: muntsos_aarch64
   Project_File: aws.gpr
   Project_File: libsimpleio.gpr
   Tag: muntsos
   Tag: embedded
   Tag: linux
   Tag: arm64
   Tag: aarch64
   Version: 9.3.1
   Website: https://github.com/pmunts/muntsos
Dependencies (direct):
   muntsos_dev_aarch64*
Dependencies (missing):
   muntsos_dev_aarch64* (direct,hinted)
      Hint: Available at http://repo.munts.com/debian11 or http://repo.munts.com/muntsos/rpms
Dependencies (graph):
   muntsos_aarch64=9.3.1 --> muntsos_dev_aarch64*
Dependencies cannot be met


LOG:
