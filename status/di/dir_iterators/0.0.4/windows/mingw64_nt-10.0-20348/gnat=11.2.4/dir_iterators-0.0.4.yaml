badge: false
crate: dir_iterators
creation_timestamp: 1659270535.7778597
distro: mingw64_nt-10.0-20348
duration: 13.719000000000051
gnat: 11.2.4
last_attempt: 2025-01-25 12:28:15.356521+00:00
log:
- 'Test ran at 2025-01-25 12:28:15.356521+00:00


  '
- 'SOLUTION:

  '
- "dir_iterators=0.0.4: Ways of moving around directory trees\r\n"
- "Origin: commit 88741e32827693dd37a1f9d7d7b72703d4ddd42e from https://github.com/pyjarrett/dir_iterators.git\r\
  \n"
- "Properties:\r\n"
- "   Author: Paul Jarrett\r\n"
- "   Description: Ways of moving around directory trees\r\n"
- "   License: Apache-2.0\r\n"
- "   Long_Description: [![Build Status](https://github.com/pyjarrett/dir_iterators/actions/workflows/build.yml/badge.svg)](https://github.com/pyjarrett/dir_iterators/actions)\r\
  \n"
- "[![Alire](https://img.shields.io/endpoint?url=https://alire.ada.dev/badges/dir_iterators.json)](https://alire.ada.dev/crates/dir_iterators.html)\r\
  \n"
- "\r\n"
- "## Iterator-based directory walks\r\n"
- "\r\n"
- "Provides convenient ways to walk directories based on Ada 2012 user-defined\r\n"
- "iterators.\r\n"
- "\r\n"
- "Inspired by [walkdir for Rust](https://github.com/BurntSushi/walkdir).\r\n"
- "\r\n"
- "\r\n"
- "## Walking a directory tree recursively\r\n"
- "\r\n"
- "```ada\r\n"
- "with Ada.Directories;\r\n"
- "with Ada.Text_IO;\r\n"
- "with Dir_Iterators.Recursive;\r\n"
- "\r\n"
- "-- ...\r\n"
- "\r\n"
- "Dir_Walk : constant Dir_Iterators.Recursive.Recursive_Dir_Walk\r\n"
- "    := Dir_Iterators.Recursive.Walk (Dir);\r\n"
- "\r\n"
- "for Dir_Entry of Dir_Walk loop\r\n"
- "    Ada.Text_IO.Put_Line(Ada.Directories.Full_Name(Dir_Entry));\r\n"
- "end loop;\r\n"
- "```\r\n"
- "\r\n"
- "## Walking a directory tree recursively with a filter\r\n"
- "\r\n"
- "Use a filter to prune directories and files from the walk.\r\n"
- "\r\n"
- "```ada\r\n"
- "with Ada.Directories;\r\n"
- "with Ada.Text_IO;\r\n"
- "with Dir_Iterators.Recursive;\r\n"
- "\r\n"
- "package AD renames Ada.Directories;\r\n"
- "\r\n"
- "-- ...\r\n"
- "\r\n"
- "    procedure Foo (Include_Dot_Files : Boolean; Dir_Root : String) is\r\n"
- "        function Filter (E : Ada.Directories.Directory_Entry_Type) return Boolean\
  \ is\r\n"
- "            Name : constant String := Ada.Directories.Simple_Name(E);\r\n"
- "        begin\r\n"
- "            return Include_Dot_Files\r\n"
- "                or else (not (Name'Length > 1 and then Name(1) = '.'));\r\n"
- "        end Filter;\r\n"
- "\r\n"
- "        Walk : constant Dir_Iterators.Recursive.Recursive_Dir_Walk :=\r\n"
- "            Dir_Iterators.Recursive.Walk (Dir_Root, Filter'Access);\r\n"
- "    begin\r\n"
- "        for Dir_Entry of Walk loop\r\n"
- "            Ada.Text_IO.Put_Line(Ada.Directories.Full_Name(Dir_Entry));\r\n"
- "        end loop;\r\n"
- "    end Foo;\r\n"
- "```\r\n"
- "\r\n"
- "   Maintainer: Paul Jarrett <jarrett.paul.young@gmail.com>\r\n"
- "   Maintainers_Logins: pyjarrett\r\n"
- "   Name: dir_iterators\r\n"
- "   Tag: dir\r\n"
- "   Tag: files\r\n"
- "   Tag: walk\r\n"
- "   Version: 0.0.4\r\n"
- "   Website: https://github.com/pyjarrett/dir_iterators\r\n"
- '

  '
- '

  LOG:

  '
- 'Note: Deploying dir_iterators=0.0.4...

  '
- 'Note: Building dir_iterators/dir_iterators.gpr...

  '
- 'Setup

  '
- '   [mkdir]        object directory for project Dir_Iterators

  '
- '   [mkdir]        library directory for project Dir_Iterators

  '
- 'Compile

  '
- '   [Ada]          dir_iterators.ads

  '
- '   [Ada]          dir_iterators-recursive.adb

  '
- '   [Ada]          dir_iterators-ancestor.adb

  '
- 'Build Libraries

  '
- '   [gprlib]       Dir_Iterators.lexch

  '
- '   [archive]      libDir_Iterators.a

  '
- '   [index]        libDir_Iterators.a

  '
- 'Build finished successfully in 1.66 seconds.

  '
- '

  '
- 'dir_iterators=0.0.4 successfully retrieved and built.

  '
- 'There are no dependencies.

  '
- 'Found declared GPR file: dir_iterators.gpr

  '
platform: windows
status: success
version: 0.0.4
