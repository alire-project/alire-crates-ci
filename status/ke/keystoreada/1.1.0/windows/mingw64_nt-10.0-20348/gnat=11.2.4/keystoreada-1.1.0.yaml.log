Test ran at 2022-05-22 00:40:08.603196+00:00

SOLUTION:
keystoreada=1.1.0: Ada Keystore
Origin: source archive 1.1.0.tar.gz at https://github.com/stcarrez/ada-keystore/archive/1.1.0.tar.gz with hash sha512:d28d822c2c2d459f3dd44b720cbd63d07996b0169e0f106817d4b1f93c9b46a670f5c240ded32aeb2863934790b4670698bdbaa44cf49bf5cab4d4cddd561af6
Properties:
   Post_Fetch run: ${CRATE_DIR}/./rm -f config.gpr
   Author: Stephane.Carrez@gmail.com
   Description: Ada Keystore
   GPR Scenario: BUILD := distrib | debug | optimize | profile | coverage
   GPR Scenario: KEYSTORE_LIBRARY_TYPE := relocatable | static | static-pic
   License: Apache-2.0
   Long_Description: 
[![Build Status](https://img.shields.io/jenkins/s/https/jenkins.vacs.fr/Bionic-Ada-Keystore.svg)](http://jenkins.vacs.fr/job/Bionic-Ada-Keystore/)
[![Test Status](https://img.shields.io/jenkins/t/https/jenkins.vacs.fr/Bionic-Ada-Keystore.svg)](http://jenkins.vacs.fr/job/Bionic-Ada-Keystore/)
[![codecov](https://codecov.io/gh/stcarrez/ada-keystore/branch/master/graph/badge.svg)](https://codecov.io/gh/stcarrez/ada-keystore)

# Overview

Ada Keystore is a tool and library to store information in secure wallets
and protect the stored information by encrypting the content.
It is necessary to know one of the wallet password to access its content.
Ada Keystore can be used to safely store passwords, credentials,
bank accounts and even documents.

Wallets are protected by a master key using AES-256 and the wallet
master key is protected by a user password.
The wallet defines up to 7 slots that identify
a password key that is able to unlock the master key.  To open a wallet,
it is necessary to unlock one of these 7 slots by providing the correct
password.  Wallet key slots are protected by the user's password
and the PBKDF2-HMAC-256 algorithm, a random salt, a random counter
and they are encrypted using AES-256.

Values stored in the wallet are protected by their own encryption keys
using AES-256.  A wallet can contain another wallet which is then
protected by its own encryption keys and passwords (with 7 independent slots).
Because the child wallet has its own master key, it is necessary to known
the primary password and the child password to unlock the parent wallet
first and then the child wallet.

## Documents

* [Ada Keystore Guide](https://ada-keystore.readthedocs.io/en/latest/) [PDF](https://github.com/stcarrez/ada-keystore/blob/master/docs/keystore-book.pdf)


   Maintainer: Stephane.Carrez@gmail.com
   Maintainers_Logins: stcarrez
   Name: keystoreada
   Project_File: .alire/keystoreada.gpr
   Tag: security
   Tag: storage
   Tag: nosql
   Version: 1.1.0
Dependencies (direct):
   utilada^2.1.0
Dependencies (solution):
   utilada=2.1.0
Dependencies (graph):
   keystoreada=1.1.0 --> utilada=2.1.0 (^2.1.0)


LOG:
Note: Deploying release keystoreada=1.1.0...
#=#=#                                                                         
##O#-#                                                                        
##O=#  #                                                                      
#-#O=#  #                                                                     
Note: Deploying release utilada=2.1.0...
#=#=#                                                                         
##O#-#                                                                        
##O=#  #                                                                      
#=#=-#  #                                                                     
Note: Running post_fetch actions for keystoreada=1.1.0...
Setup
   [mkdir]        object directory for project UtilAda_Core
   [mkdir]        library directory for project UtilAda_Core
   [mkdir]        object directory for project UtilAda_Sys
   [mkdir]        library directory for project UtilAda_Sys
   [mkdir]        object directory for project KeystoreAda
   [mkdir]        library directory for project KeystoreAda
Compile
   [Ada]          util-properties.adb
   [Ada]          util-properties-discrete.adb
   [Ada]          util-properties-bundles.adb
util-properties.adb:518:07: warning: variable "Old_Shared" is never read and never assigned
   [Ada]          util-properties-basic.adb
   [Ada]          util-log.adb
   [Ada]          util-log-loggers.adb
   [Ada]          util-log-locations.adb
   [Ada]          util-log-appenders.adb
   [Ada]          util-files.adb
   [Ada]          util-events.adb
   [Ada]          util-events-timers.adb
   [Ada]          util-events-channels.adb
   [Ada]          util-dates.adb
   [Ada]          util-dates-rfc7231.adb
   [Ada]          util-dates-iso8601.adb
   [Ada]          util-dates-formats.adb
   [Ada]          util-commands.adb
   [Ada]          util-commands-parsers.adb
   [Ada]          util-commands-parsers-gnat_parser.adb
   [Ada]          util-commands-drivers.adb
util-commands-parsers-gnat_parser.ads:38:04: instantiation error at util-commands-parsers.ads:37
util-commands-parsers-gnat_parser.ads:38:04: "not null" required for parameter "Process" at line 28

   compilation of util-commands-parsers-gnat_parser.adb failed

gprbuild: *** compilation phase failed
stderr: Command ["gprbuild", "-gnatwU", "-j0", "-p", "-P", ".alire/keystoreada.gpr"] exited with code 4
ERROR: Command ["gprbuild", "-gnatwU", "-j0", "-p", "-P", ".alire/keystoreada.gpr"] exited with code 4

Warning: keystoreada=1.1.0 successfully retrieved but its build failed.
Dependencies were solved as follows:

   + utilada 2.1.0 (new)
ERROR: Build ended with errors
