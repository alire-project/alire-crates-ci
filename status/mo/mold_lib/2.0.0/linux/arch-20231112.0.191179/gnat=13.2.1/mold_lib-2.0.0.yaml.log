Test ran at 2024-02-08 01:09:59.453288+00:00

SOLUTION:
mold_lib=2.0.0: Meta-variable Operations for Lean Development (lib)
Origin: commit 097ccfde538ebeae33ac1026ee674b12012b564f from https://github.com//rocher/mold_lib.git
Properties:
   Author: Francesc Rocher
   Build Switches: 
   Description: Meta-variable Operations for Lean Development (lib)
   License: MIT
   Long_Description: [![Alire](https://img.shields.io/endpoint?url=https://alire.ada.dev/badges/mold_lib.json)](https://alire.ada.dev/crates/mold_lib.html)
[![Alire CI/CD](https://img.shields.io/endpoint?url=https://alire-crate-ci.ada.dev/badges/mold_lib.json)](https://alire-crate-ci.ada.dev/crates/mold_lib.html)
![unit-test](https://github.com/rocher/mold_lib/actions/workflows/unit-test.yml/badge.svg)
[![codecov](https://codecov.io/gh/rocher/mold_lib/graph/badge.svg?token=LB83SI4I0Y)](https://codecov.io/gh/rocher/mold_lib)
[![GitHub release](https://img.shields.io/github/release/rocher/mold_lib.svg)](https://github.com/rocher/mold_lib/releases/latest)
[![License](https://img.shields.io/github/license/rocher/mold_lib.svg?color=blue)](https://github.com/rocher/mold_lib/blob/master/LICENSE)

## Welcome to **Mold (lib)**

> **MOLD**: *Meta-variable Operations for Lean Development*

Mold is a Template Processor, or Template Engine, to work with repository
templates. The main motivation of Mold is to have repositories in GitHub used
as template repositories to create new, customized repositories for other
users.

Main features supported in Mold include

  * variable replacement in mold files (*.mold)

  * for a given directory, variable replacement recursively for all mold files
    in all subdirectories

  * variable replacement in file names

  * inclusion of other templates

  * definition of variables with a simple TOML file

  * predefined and custom text filters to easy text transformations

Variable replacement can be specified as *normal*, *optional* or *mandatory*.
For example, the variable `foo = "bar"` can be specified with `{{foo}}`,
`{{?foo}}` (optional) or `{{#foo}}` (mandatory). The difference is the handling
of errors when an undefined variable is encountered.

All mold files must end with the extension `.mold`, for example
`README.md.mold`. Destination files (with variables replaced) have the same
name without the mold extension: `README.md`. This simplifies the work done in
large subdirectories with few templates.

This crate contains the Ada library and unit tests. For a CLI tool, please
take a look at the crate `mold`.

## Reference Guide

Please visit [Mold documentation](https://rocher.github.io/mold) for more
information.

---
## License
MIT (c) 2023 Francesc Rocher

   Maintainer: Francesc Rocher <francesc.rocher@gmail.com>
   Maintainers_Logins: rocher
   Name: mold_lib
   Tag: template
   Tag: template-engine
   Tag: template-repo
   Version: 2.0.0
   Website: https://rocher.github.io/mold
Dependencies (direct):
   ada_toml~0.3.0
   gnat>=2021 | (>=12 & <2000)
   simple_logging^1.2.0
Dependencies (solution):
   ada_toml=0.3.0
   gnat=13.2.1 (gnat_external) (installed)
   simple_logging=1.2.0
Dependencies (graph):
   mold_lib=2.0.0 --> ada_toml=0.3.0 (~0.3.0)                              
   mold_lib=2.0.0 --> gnat=13.2.1 (gnat_external) (>=2021 | (>=12 & <2000))
   mold_lib=2.0.0 --> simple_logging=1.2.0 (^1.2.0)                        


LOG:
Note: Deploying mold_lib=2.0.0...
Note: Deploying ada_toml=0.3.0...
#=#=#                                                                          
Note: Deploying simple_logging=1.2.0...
Note: Building mold_lib/mold_lib.gpr...
Setup
   [mkdir]        object directory for project Ada_TOML
   [mkdir]        library directory for project Ada_TOML
   [mkdir]        object directory for project Simple_Logging
   [mkdir]        library directory for project Simple_Logging
   [mkdir]        object directory for project Mold_Lib
   [mkdir]        library directory for project Mold_Lib
Compile
   [Ada]          simple_logging-support.adb
   [Ada]          simple_logging-decorators.adb
   [Ada]          simple_logging-filtering.adb
   [Ada]          simple_logging.adb
   [Ada]          toml-file_io.adb
   [Ada]          toml-generic_dump.adb
   [Ada]          toml.adb
   [Ada]          toml-generic_parse.adb
   [Ada]          mold_lib_config.ads
   [Ada]          text_filters.adb
   [Ada]          predefined_text_filters.adb
   [Ada]          text_filters_data.ads
   [Ada]          custom_text_filters.ads
   [Ada]          mold_lib-impl-file.adb
   [Ada]          mold_lib.adb
   [Ada]          mold_lib-impl-directory.adb
   [Ada]          mold_lib-impl.adb
   [Ada]          mold_lib-impl-validation.adb
   [Ada]          log_exceptions.adb
   [Ada]          mold_lib-impl-text.adb
   [Ada]          mold_lib-impl-variables.adb
Build Libraries
   [gprlib]       ada_toml.lexch
   [gprlib]       simple_logging.lexch
   [gprlib]       mold.lexch
   [archive]      libada_toml.a
   [archive]      libsimple_logging.a
   [index]        libsimple_logging.a
   [index]        libada_toml.a
   [archive]      libmold.a
   [index]        libmold.a
Build finished successfully in 8.12 seconds.

mold_lib=2.0.0 successfully retrieved and built.
Dependencies were solved as follows:

   +  ada_toml       0.3.0  (new)                        
   +i gnat           13.2.1 (new,installed,gnat_external)
   +  simple_logging 1.2.0  (new)                        
Found declared GPR file: mold_lib.gpr
