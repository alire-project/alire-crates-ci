Test ran at 2024-06-16 13:28:16.148011+00:00

SOLUTION:
mold=1.0.3: Meta-variable Operations for Lean Development (cli)
Origin: commit a26094a76c095ddca3288d84d8d3637e561f6713 from https://github.com/rocher/mold.git
Properties:
   Author: Francesc Rocher
   Build Profile: 
   Build Switches: 
   Description: Meta-variable Operations for Lean Development (cli)
   Executable: mold
   License: MIT
   Long_Description: [![Alire](https://img.shields.io/endpoint?url=https://alire.ada.dev/badges/mold.json)](https://alire.ada.dev/crates/mold.html)
[![Alire CI/CD](https://img.shields.io/endpoint?url=https://alire-crate-ci.ada.dev/badges/mold.json)](https://alire-crate-ci.ada.dev/crates/mold.html)
![unit-test](https://github.com/rocher/mold/actions/workflows/unit-test.yml/badge.svg)
[![codecov](https://codecov.io/gh/rocher/mold/graph/badge.svg?token=LB83SI4I0Y)](https://codecov.io/gh/rocher/mold)
[![GitHub release](https://img.shields.io/github/release/rocher/mold.svg)](https://github.com/rocher/mold/releases/latest)
[![License](https://img.shields.io/github/license/rocher/mold.svg?color=blue)](https://github.com/rocher/mold/blob/master/LICENSE)

## Welcome to **Mold (cli)**

> **MOLD**: *Meta-variable Operations for Lean Development*

Mold is a Template Processor, or Template Engine, to work with repository
templates. The main motivation of Mold is to have repositories in GitHub used
as template repositories to create new, customized repositories for other
users.

Main features supported in Mold include

  * variable replacement in mold files (*.mold)

  * for a given directory, variable replacement recursively for all mold files
    in all subdirectories

  * variable replacement in filenames

  * inclusion of other templates

  * definition of variables with a simple TOML file

  * predefined and custom text filters to easy text transformations

  * variable values can be defined with other variables

Variable replacement can be specified as *normal*, *optional* or *mandatory*.
For example, the variable `foo = "bar"` can be specified with `{{foo}}`,
`{{?foo}}` (optional) or `{{#foo}}` (mandatory). The difference is the handling
of errors when an undefined variable is encountered.

All mold files must end with the extension `.mold`, for example
`README.md.mold`. Destination files (with variables replaced) have the same
name without the mold extension: `README.md`. This simplifies the work done in
large subdirectories with few templates.

This crate contains the Ada library and unit tests. For a CLI tool, please
take a look at the crate `mold`.

## Reference Guide

Please visit [Mold documentation](https://rocher.github.io/mold) for more
information.

---
## License
MIT (c) 2023, 2024 Francesc Rocher

   Maintainer: Francesc Rocher <francesc.rocher@gmail.com>
   Maintainers_Logins: rocher
   Name: mold
   Tag: template
   Tag: template-engine
   Tag: template-repo
   Version: 1.0.3
   Website: https://rocher.github.io/mold
Dependencies (direct):
   clic~0.3.0
   gnat>=2021 | (>=12 & <2000)
   mold_lib^2.2.0
   simple_logging^1.2.0
Dependencies (solution):
   aaa=0.2.6
   ada_toml=0.3.0
   ansiada=1.0.0
   clic=0.3.0
   mold_lib=2.2.1
   simple_logging=1.2.0
Dependencies (external):
   gnat>=2021 | (>=12 & <2000) (direct,hinted)
Dependencies (graph):
   clic=0.3.0     --> aaa=0.2.6 (~0.2.4)           
   clic=0.3.0     --> ada_toml=0.3.0 (~0.2|~0.3)   
   clic=0.3.0     --> ansiada=1.0.0 (^1.0)         
   clic=0.3.0     --> simple_logging=1.2.0 (^1.2.0)
   mold=1.0.3     --> clic=0.3.0 (~0.3.0)          
   mold=1.0.3     --> gnat>=2021 | (>=12 & <2000)  
   mold=1.0.3     --> mold_lib=2.2.1 (^2.2.0)      
   mold=1.0.3     --> simple_logging=1.2.0 (^1.2.0)
   mold_lib=2.2.1 --> ada_toml=0.3.0 (~0.3.0)      
   mold_lib=2.2.1 --> gnat>=2021 | (>=12 & <2000)  
   mold_lib=2.2.1 --> simple_logging=1.2.0 (^1.2.0)
Dependencies cannot be met


LOG:
