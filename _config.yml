# Welcome to Jekyll!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely edit after that. If you find
# yourself editing this file very often, consider using Jekyll's data files
# feature for the data you need to update frequently.
#
# For technical reasons, this file is *NOT* reloaded automatically when you use
# 'bundle exec jekyll serve'. If you change this file, please restart the server process.

# Site settings
# These are used to personalize your new site. If you look in the HTML files,
# you will see them accessed via {{ site.title }}, {{ site.email }}, and so on.
# You can create any custom variable you would like, and they will be accessible
# in the templates via {{ site.myvariable }}.
title: Alire Crate Status
description: Results of CI crate build tests
baseurl: "" # the subpath of your site, e.g. /blog
url: "https://alire-crate-ci.ada.dev" # the base hostname & protocol for your site, e.g. http://example.com
# The above site.url doesn't seem to work. Use site.data.meta.url instead

# Build settings
markdown: kramdown
# theme: devlopr
plugins:
#  - jekyll-feed

# Exclude from processing.
# The following items will not be processed, by default. Create a custom list
# to override the default setting.
exclude:
   - "*.py"
   - "*.sh"
   - "*.txt"
   - .github
   - alr/
   - README.md
   - Gemfile
   - Gemfile.lock
   - node_modules
   - obsolete
   - test/
   - troubles*

keep_files:
   - status/ # We want these verbatim, for the logs

collections:
  crates:
    output: true
  badges:
    output: true

header_pages:
#  - crates.md
#  - search.html
#  - docs/index.md

# Devlopr
repository: alire-project/alire-crates-ci
author_logo: profile.png
twitter_username: adaprogrammers
github_username:  alire-project
gitter_room: ada-lang/Alire

# Search settings
# tipue_search:
#   include:
#     pages: true
#   exclude:
#     files: [index.md, search.html]

# Set Kramdown table-of-content levels. This setting is for the entire site,
# but so far TOC is only used in the docs.
kramdown:
  toc_levels: 1..2
  input: GFM        # Allows ``` to work
  hard_wrap: false  # Allows ``` to work

liquid:
  strict_variables: false # Unfortunately it fails if true even where defaults are being set
  strict_filters: true

